/* This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html */
plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.4.20"

    id("tech.formatter-kt.formatter") version "0.7.2"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    //Use mavenCentral for JDBC
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("ch.qos.logback:logback-classic:1.2.1")

    implementation("org.json:json:20201115")

    implementation("com.corundumstudio.socketio:netty-socketio:1.7.18")

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation("mysql:mysql-connector-java:8.0.23")
    implementation("org.junit.jupiter:junit-jupiter:5.4.2")
    implementation("org.junit.jupiter:junit-jupiter:5.4.2")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // Create a client mock
    testImplementation("io.socket:socket.io-client:1.0.0")
}

tasks.test { useJUnitPlatform() }

application {
    // Define the main class for the application.
    mainClass.set("edu.kit.outwait.server.core.ServerKt")

    // Add dependencies
    tasks.withType<Jar>() {
        configurations["compileClasspath"]
            .forEach { file: File -> from(zipTree(file.absoluteFile)) }
        manifest { attributes(mapOf("Main-Class" to "edu.kit.outwait.server.core.ServerKt")) }
    }
}
